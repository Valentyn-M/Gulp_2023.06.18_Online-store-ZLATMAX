// Подключаем отдельные объемные модули
// Просто раскомментировать нужные модули
// Отдельные функции подключаются в js/files/scripts.js

"use strict";

// ==========================================================================


// Menu burger + CSS

// Стили для работы меню-бургер находятся в "menu-burger.scss"
import "./files/menu-burger.js";


// ==========================================================================


// Динамический адаптив. Без CSS

/*
Перемещаемому элементу добавляем атрибут "data-da".
Например, data-da="menu__body,last,991.98", где:
1) menu__body - уникальный класс объекта, в который перемещаем элемент
2) last - место куда перемещаем объект в menu__body. Можно указать first (в начало) или last (в конец) или нужную позицию (1, 2, 3...)
3) 991.98 - ширина экрана (меньше или равно), когда делаем перемещение (если не указано, то по умолчанию 2000px)
Для MobileFirst - найти в коде параметр const daType = "max" и поменять его на min
*/
// Сниппет (CSS): "av"
import "./files/dynamic-adaptive.js";


// ==========================================================================


// Placeholder инпута. Без CSS

// При клике удаляет плейхолдер и возвращает обратно
// Просто добавить инпуту атрибут "data-placeholder"
import "./files/forms/input-placeholder.js";


// ==========================================================================================================================


// Input Require (Проверка инпута) + CSS

// Можно добавить стили для красоты (для этого инпут нужно обернуть в div-обертку)
// Подключение стилей для проверки инпутов в файле "base/forms/forms/_forms.scss"
// Стили инпутов находятся в файле "input-require.scss"
/*
Для проверяемого инпута добавляем 2 data-атрибута: "data-required" и "data-error":
1) data-required="email" или data-required="text" - это тип поля (email или текстовое поле)
2) data-error="Ошибка" или data-error="Поле не должно быть пустым" - это описание ошибки (оно может выводиться в подсказку)
*/
// Сниппет (HTML): "inp"
import "./files/forms/input-require.js";


// ==========================================================================================================================


// Tooltips (Всплывающие подсказки)

// Добавляем элементу атрибут data-tooltip="Подсказка"
import "./files/tooltips.js";


// ==========================================================================================================================


// File Preview (Добавление превью загружаемого изображения) + CSS

// Добавляем атрибут "data-preview" для блока, в который будем выводить превью загружаемого изображения
// Сниппет (HTML): "file"
// import "./files/forms/file-preview.js";


// ==========================================================================================================================


// Select + CSS

// Гибридный селект: Синхорнизированы Нативный и Кастомный селекты
// Если лейбл не нужен то оставиить его пустым (<span class="select__label"></span>)
// Сниппет (HTML): "sel"
import "./files/forms/select.js";


// ==========================================================================================================================


// Range + CSS

// Ползунок диапазона (ползунки показа дипазона цены и т.п. от минимального значения до максимальноего)
// Подключение и настройка выполняется в файле: js/files/forms/range.js
// Подключение стилей в файле: scss/base/forms/_forms.scss
// Настройка стилей в файле: scss/base/forms/range.scss
// Инструкция: https://refreshless.com/nouislider/
// Каждому виду Слайдера Диапазона следует указать уникальный атрибут data-range-name
// Сниппет (HTML): "range"
import "./files/range.js";


// ==========================================================================================================================


// Quantity + CSS

// Количество единиц +- (Например количество единиц покупаемого товара)
// Сниппет (HTML): "quantity"
import "./files/forms/quantity.js";


// ==========================================================================================================================


// Spollers (Спойлеры). Без CSS

// Для родителя спойлеров пишем атрибут "data-spollers" (data-spollers="991.98,max")
// Для заголовков спойлеров пишем атрибут "data-spoller"
// Если нужно изначально показать (расскрыть) спойлер при загрузке страницы, то добавляем для заголовка этого спойлера (data-spoller) класс "_spoller-active"
// Если нужно, чтобы в блоке открывался только один спойлер (остальные будут скрыты) добавляем для родителя спойлеров атрибут "data-one-spoller"
// (подробное описание работы споллеров смотри в spoller.js в конце файла)
// Сниппет (HTML): "spollers"
import "./files/spollers.js";


// ==========================================================================================================================


// Tabs. Без CSS

// Сниппет (HTML): "tabs"
// Чтобы табы стали спойлерами, надо дабавить в дата-атрибут медиазапрос (data-tabs="991.98")
// Если нужно, чтобы в блоке открывался только один спойлер, надо дабавить в дата-атрибут слово "one" (data-tabs="991.98,one")
import "./files/tabs.js";


// ==========================================================================


// Popups (Попапы) + CSS + HTML

// 1) Подключить в HTML файл "@@include('html/blocks/_popup.html',{})"
// 2) Подключить стили в base.scss
// 3) Подключить нужное количество попапов здесь

import * as popups from "./files/popups.js";

// Присваиваем элементу атрибут data-popup-button="1"
// В html присваиваем блоку атртибут data-popup-window="1"
popups.popup1();

// Присваиваем элементу атрибут data-popup-button="2"
// В html присваиваем блоку атртибут data-popup-window="2"
// popups.popup2();

// Присваиваем элементу атрибут data-popup-button="3"
// В html присваиваем блоку атртибут data-popup-window="3"
// popups.popup3();


// ==========================================================================


// Звёздный Рейтинг + CSS

// Требуется подключение стилей (base/forms/_forms)
// Главный блок должен иметь класс ".rating"
// Чтобы дать возможность указывать рейтинг пользователем добавляем еще класс ".rating_set"
// Если числовое значение не нужно, добавляем этому диву атрибут "hidden" (<div hidden class="rating__value">3.7</div>)
// Сниппет (HTML): raiting
import "./files/forms/rating.js";


// ==========================================================================


// Слайдер Swiper

// Настройка и подключение плагина слайдера Swiper и новых слайдов выполняется в файле js/files/slider-swiper.js
// Подключение базовых стилей выполняется в файле scss/base.scss, необходимо раскомментировать строку '@import "base/swiper";'
// Документация по работе в шаблоне: https://swiperjs.com/swiper-api
// Сниппет (HTML): "swiper"
import "./files/slider-swiper.js";


// ==========================================================================


// Подключаем прочие скрипты для данного проекта

// ВСЕГДА ДОЛЖНО БЫТЬ ВКЛЮЧЕНО
import "./files/scripts.js";


// ==========================================================================

