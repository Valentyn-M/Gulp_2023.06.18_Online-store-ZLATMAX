// Документация по работе со слайдером: https://swiperjs.com/get-started

// Подключаем Слайдер из node_modules
// Использование JS-модулей
// https://swiperjs.com/swiper-api#custom-build
/*
Импортируем только те модули, которые нужны, указывая их через запятую в {}
Например { Navigation, Pagination, Scrollbar }.
*/
/*
Основные модули (всего модулей больше 20):
Navigation - Навигационный модуль
Pagination - Модуль пагинации
Scrollbar - Модуль полосы прокрутки
Keyboard - Модуль управления клавиатурой
Mousewheel - Модуль управления колесиком мыши
Autoplay - Модуль автопроигрывания
EffectFade - Модуль эффекта затухания
EffectFlip - Модуль эффекта переворота
EffectCube - Модуль кубического эффекта
EffectCoverflow - Модуль эффекта покровного потока
Zoom - Модуль масштабирования
Parallax - Модуль параллакса
Controller - Модуль контроллера
Virtual - Модуль виртуальных слайдов
A11y - Модуль доступности
Thumbs - Модуль большого пальца (слейдер с превью под основным слайдером)
*/
import Swiper, { Pagination, Parallax, Autoplay, Thumbs } from 'swiper';

// Использование Стилей слайдера (подключаем основные стили и стили модулей в base.scss)

// Добавление классов слайдерам
// Блок, который содержит слайдер (необходимая обертка) должен иметь класс "__swiper" (Например: <div class="main-block__swiper">)
/*
<!-- Основной контейнер (Main container) -->
<div class="swiper">
  <!-- Дополнительная необходимая обертка (Additional required wrapper) -->
  <div class="swiper-wrapper">
	 <!-- Слайды (Slides) -->
	 <div class="swiper-slide">Slide 1</div>
	 <div class="swiper-slide">Slide 2</div>
	 <div class="swiper-slide">Slide 3</div>
	 ...
  </div>
  <!-- Пагинация (If we need pagination) -->
  <div class="swiper-pagination"></div>

  <!-- Стрелки управления (If we need navigation buttons). Стрелки будут псевдоэлментами "after" этих клссов -->
  <div class="swiper-button-prev"></div>
  <div class="swiper-button-next"></div>

  <!-- Полоса прокрутки (If we need scrollbar) -->
  <div class="swiper-scrollbar"></div>
</div>
*/
/*
Добавляем основные классы (остальные классы при необходимости добавляем вручную):
swiper - главному блоку
swiper-wrapper - оболочке
wiper-slide - слайдерам
*/
function buildSliders() {
	const sliders = document.querySelectorAll('[class*="__swiper"]:not(.swiper-wrapper)');		// выбираем все слайдеры на странице
	if (sliders) {
		sliders.forEach(function (slider) {
			slider.parentElement.classList.add('swiper');		// добавляем класс основному блоку
			slider.classList.add('swiper-wrapper');				// добавляем класс оболочке слайдера
			for (const slide of slider.children) {
				slide.classList.add('swiper-slide');				// добавляем класс для каждого слайда
			}
		});
	}
}
buildSliders();
/*
Если слайдер отображается на всю ширину окна браузера,
то следует добавить классу "swiper" (например для: "main-block__slider") свойство "width: 100%;"

Если слайдер размещен во Flex-контейнере, то
возможно этому контейнеру придется добавить свойство "min-width: 0;"
*/

// ==========================================================================================================================

// Перечень слайдеров 
// Добавить класс основного блока в условие (учесть в названии классов блоков одинаковые слайдеры на странице)
// "if" необходим, чтобы код слайдера применялся, только если этот слайдер есть на странице

// Слайдер 1 (Главная страница)
if (document.querySelector('.main-block__slider')) {
	// Инициализация слайдера: передаем фукции класс HTML-элемента, который является Основным контейнером слайдера (swiperContainer)
	// Если несколько слайдеров, то добавляем новую фукцию с другим классом для swiperContainer: const swiper_2 = new Swiper('.main-block__slider-2',{...});
	const swiper = new Swiper('.main-block__slider', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [Pagination, Parallax, Autoplay],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			// вписываем сюда наш класс нашего блока для буллетов (внутри блока будут созданы спаны для буллетов)
			el: '.controll-main-block__dots',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Чтобы буллеты нормально отображались:
			/*
			&__dots {
					display: grid;
					grid-auto-flow: column;
					justify-content: start;
					align-items: center;
					margin: 0 auto;
					overflow: hidden;
			}
			*/
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: false,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (он будет по центру)
			dynamicMainBullets: 4,
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: true,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 1,

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 50,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить
		// Если slidesPerView: auto - установить количество дублирующихся слайдов (см.нижже)
		// Если slidesPerView > 1 - ОТКЛЮЧИТЬ (глючит)
		// loop: false,
		loop: true,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			320: {

			},
			479.98: {

			},
			767.98: {

			},
			991.98: {

			},
		},

		// ---------------------------------------------------------------------------------------------

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 3000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертикальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)
		thumbs: {
			// Свайпер с миниатюрами и его настройки
			swiper: {
				// Указываем класс нового слайдера с миниатюрами (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
				el: '.image-mini-slider',
				// Количество миниатюр в минислайдере
				slidesPerView: 5,
			}
		},

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			control: '.main-block__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},


		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		on: {
			// Событие инициализации
			init: function (swiper) {
				const fractionTotal = document.querySelector('.fraction-controll__total');				// Фракция, в которой выводится общее количество слайдов
				// Добавляем число слайдов
				fractionTotal.innerHTML = swiper.slides.length;
				// Если нужно добавить 0 перед числом
				// fractionTotal.innerHTML = swiper.slides.length < 10 ? `0${swiper.slides.length}` : swiper.slides.length;
			},
			// Событие смены слайдера
			slideChange: function () {
				const fractionCurrent = document.querySelector('.fraction-controll__current');		// Фракция, в которой выводится номер текущео слайда
				// Добавляем номер текущего слайда
				fractionCurrent.innerHTML = ++this.realIndex;													// ++this.realIndex - Получаем Индексный номер текущего активного слайда (увеличенный на 1, т.к. порядок начинается с 0)
			},
		},

	});

	// ==========================================================================================================================
}
// Слайдер 2 (Главная страница: Продукты (Хиты, Акции))
if (document.querySelector('.products-slider')) {
	const swiper_2 = new Swiper('.products-slider__slider', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [Pagination, Autoplay],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			el: '.products-slider__dots',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: true,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (от будет по центру)
			dynamicMainBullets: 1,
			// Кастомные булеты (на каждом булете указан номер слайда). Добавить "font-size", иначе цифр не видно
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: true,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// ВАЖНО: Настроки Брейкпоинтов перебывают эти настроки
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 4, // Эти настройки смотри в брейкпоинтах

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 30,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить. Если slidesPerView: auto - установить количество дублирующихся слайдов (см. нижже)
		loop: false,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 5000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: false,
		},

		// ---------------------------------------------------------------------------------------------


		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертивальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			320: {
				slidesPerView: 1,
				loop: true,
			},
			480: {
				slidesPerView: 1,
			},
			650: {
				slidesPerView: 2,
				loop: false,
			},
			992: {
				slidesPerView: 3,
			},
			1370: {
				slidesPerView: 4,
			},
		},

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)
		thumbs: {
			// Свайпер с миниатюрами и его настройки
			swiper: {
				// Указываем класс нового слайдера с миниатюрами (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
				el: '.image-mini-slider',
				// Количество миниатюр в минислайдере
				slidesPerView: 5,
			}
		},

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			control: '.main-block__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},


		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		on: {
			init: function () {
				// console.log('swiper initialized');
			},
		},

	});
	// ==========================================================================================================================
}
// Слайдер 3 (Главная страница: Новинки)
if (document.querySelector('.products-new')) {
	const swiper_3 = new Swiper('.products-new__slider', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [Pagination, Autoplay],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			el: '.products-new__dots',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: true,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (от будет по центру)
			dynamicMainBullets: 1,
			// Кастомные булеты (на каждом булете указан номер слайда). Добавить "font-size", иначе цифр не видно
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: true,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// ВАЖНО: Настроки Брейкпоинтов перебывают эти настроки
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 3, // Эти настройки смотри в брейкпоинтах

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 30,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить. Если slidesPerView: auto - установить количество дублирующихся слайдов (см. нижже)
		loop: false,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			320: {
				slidesPerView: 1,
				loop: true,
			},
			650: {
				slidesPerView: 2,
				loop: false,
			},
			1330: {
				slidesPerView: 3,
			},
		},

		// ---------------------------------------------------------------------------------------------

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 5000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертивальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)
		thumbs: {
			// Свайпер с миниатюрами и его настройки
			swiper: {
				// Указываем класс нового слайдера с миниатюрами (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
				el: '.image-mini-slider',
				// Количество миниатюр в минислайдере
				slidesPerView: 5,
			}
		},

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			control: '.main-block__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},


		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		on: {
			init: function () {
				// console.log('swiper initialized');
			},
		},

	});

	// ==========================================================================================================================
}
// Слайдеры 4 и 5 (Карточка товара). Здесь 2 слайдера: Основной и Слайдер с миниатюрами
if (document.querySelector('.thumbs-images')) {
	// Слайдер 5 с миниатюрами
	const thumbsSwiper = new Swiper('.thumbs-images', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			// вписываем сюда наш класс нашего блока для буллетов (внутри блока будут созданы спаны для буллетов)
			el: '.swiper-pagination',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Чтобы буллеты нормально отображались:
			/*
			&__dots {
					display: grid;
					grid-auto-flow: column;
					justify-content: start;
					align-items: center;
					margin: 0 auto;
					overflow: hidden;
			}
			*/
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: false,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (он будет по центру)
			dynamicMainBullets: 4,
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: false,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 4,

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 16,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить
		// Если slidesPerView: auto - установить количество дублирующихся слайдов (см.нижже)
		// Если slidesPerView > 1 - ОТКЛЮЧИТЬ (глючит)
		// loop: false,
		loop: false,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			320: {
				slidesPerView: 2,
			},
			479.98: {
				slidesPerView: 3,
			},
			767.98: {
				slidesPerView: 4,
			},
			991.98: {
				slidesPerView: 4,
			},
		},

		// ---------------------------------------------------------------------------------------------

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 5000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертикальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)

		// 1) Простой вариант (минимум настроек слайдера с миниатюрами)
		// thumbs: {
		// 	// Свайпер с миниатюрами и его настройки
		// 	swiper: {
		// 		// Указываем класс нового слайдера с миниатюрами (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
		// 		el: '.thumbs-swiper',
		// 		// Количество миниатюр в минислайдере
		// 		slidesPerView: 5,
		// 	}
		// },

		// 2) Сложный вариант (слайдера с миниатюрами имеет полный набор своих настроек)
		// thumbs: {
		// 	// Свайпер с миниатюрами (указать имя свайпера с миниатюрами и создать его ниже под этим свайпером)
		// 	swiper: thumbsSwiper
		// },

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			control: '.block-name__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},

		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		on: {
			// Событие инициализации
			init: function (swiper) {
				// const fractionTotal = document.querySelector('.fraction-controll__total');				// Фракция, в которой выводится общее количество слайдов
				// // Добавляем число слайдов
				// fractionTotal.innerHTML = swiper.slides.length;
				// // Если нужно добавить 0 перед числом
				// // fractionTotal.innerHTML = swiper.slides.length < 10 ? `0${swiper.slides.length}` : swiper.slides.length;
			},
			// Событие смены слайдера
			slideChange: function () {
				// const fractionCurrent = document.querySelector('.fraction-controll__current');		// Фракция, в которой выводится номер текущео слайда
				// // Добавляем номер текущего слайда
				// fractionCurrent.innerHTML = ++this.realIndex;													// ++this.realIndex - Получаем Индексный номер текущего активного слайда (увеличенный на 1, т.к. порядок начинается с 0)
			},
		},

	});

	// ==========================================================================================================================

	// Слайдер 4 (Главный)
	const swiper_4 = new Swiper('.images-product__slider', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [Autoplay, Thumbs],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			// вписываем сюда наш класс нашего блока для буллетов (внутри блока будут созданы спаны для буллетов)
			// el: '.controll-main-block__dots',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Чтобы буллеты нормально отображались:
			/*
			&__dots {
					display: grid;
					grid-auto-flow: column;
					justify-content: start;
					align-items: center;
					margin: 0 auto;
					overflow: hidden;
			}
			*/
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: false,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (он будет по центру)
			dynamicMainBullets: 4,
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: true,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 1,

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 16,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить
		// Если slidesPerView: auto - установить количество дублирующихся слайдов (см.нижже)
		// Если slidesPerView > 1 - ОТКЛЮЧИТЬ (глючит)
		// loop: false,
		loop: true,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			// 320: {

			// },
			// 479.98: {

			// },
			// 767.98: {

			// },
			// 991.98: {

			// },
		},

		// ---------------------------------------------------------------------------------------------

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 5000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертикальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)
		// thumbs: {
		// 	// Свайпер с миниатюрами и его настройки ()
		// 	// swiper: thumbsSwiper
		// 	swiper: {
		// 		// Указываем класс нового слайдера с миниатюрами (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
		// 		el: '.thumbs-images',
		// 		// Количество миниатюр в минислайдере
		// 		slidesPerView: 4,
		// 		spaceBetween: 30,
		// 	}
		// },
		thumbs: {
			swiper: thumbsSwiper
		},

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			// control: '.main-block__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},


		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		// on: {
		// 	// Событие инициализации
		// 	init: function (swiper) {
		// 		const fractionTotal = document.querySelector('.fraction-controll__total');				// Фракция, в которой выводится общее количество слайдов
		// 		// Добавляем число слайдов
		// 		fractionTotal.innerHTML = swiper.slides.length;
		// 		// Если нужно добавить 0 перед числом
		// 		// fractionTotal.innerHTML = swiper.slides.length < 10 ? `0${swiper.slides.length}` : swiper.slides.length;
		// 	},
		// 	// Событие смены слайдера
		// 	slideChange: function () {
		// 		const fractionCurrent = document.querySelector('.fraction-controll__current');		// Фракция, в которой выводится номер текущео слайда
		// 		// Добавляем номер текущего слайда
		// 		fractionCurrent.innerHTML = ++this.realIndex;													// ++this.realIndex - Получаем Индексный номер текущего активного слайда (увеличенный на 1, т.к. порядок начинается с 0)
		// 	},
		// },

	});

	// ==========================================================================================================================
}

// ==========================================================================================================================


// Слайдер в слайдере: Подробно об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (38:28)


// -------------------------------------------------------------------------------------------------


// Синхронная работа двух слайдеров
/*
// Еще один слайдер
const swiper_2 = new Swiper('.main-block__slider-2', {
// Количество слайдов для показа (для синхронизации с 1-м слайдером этот параметр должен совпадать)
slidesPerView: 3,
// Расстояние (отступ) между слайдами
spaceBetween: 30,
});

// Передача управления
swiper.controller.control = swiper_2;
swiper.controller.control = swiper;
*/


// -------------------------------------------------------------------------------------------------


// События

// Запуск автопрокрутки при наведении (пример)
// Модуль Autoplay должен быть подключен (задержка установлена на большой интервал)

/*
// Выбираем наш слайдер
const sliderBlock = document.querySelector('.main-block__slider');

// swiper - это переменная, которой присвоен слайдер

// При наведении - включаем автоплей
sliderBlock.addEventListener("mouseenter", function (e) {
	swiper.params.autoplay.disableOnInteraction = false;
	swiper.params.autoplay.delay = 500;
	swiper.autoplay.start();
});

// При уходе курсора - включаем автоплей
sliderBlock.addEventListener("mouseleave", function (e) {
	swiper.autoplay.stop();
});
*/


// -------------------------------------------------------------------------------------------------


// Фракция (при включенной Пагинации с параметром type: 'bullets')
// on: {
// 	// Событие инициализации
// 	init: function (swiper) {
// 		const fractionTotal = document.querySelector('.fraction-controll__total');				// Фракция, в которой выводится общее количество слайдов
// 		// Добавляем число слайдов
// 		fractionTotal.innerHTML = swiper.slides.length;
// 		// Если нужно добавить 0 перед числом
// 		// fractionTotal.innerHTML = swiper.slides.length < 10 ? `0${swiper.slides.length}` : swiper.slides.length;
// 	},
// 	// Событие смены слайдера
// 	slideChange: function () {
// 		const fractionCurrent = document.querySelector('.fraction-controll__current');		// Фракция, в которой выводится номер текущео слайда
// 		// Добавляем номер текущего слайда
// 		fractionCurrent.innerHTML = ++this.realIndex;													// ++this.realIndex - Получаем Индексный номер текущего активного слайда (увеличенный на 1, т.к. порядок начинается с 0)
// 	},
// },


// -------------------------------------------------------------------------------------------------


// ==========================================================================================================================
// ==========================================================================================================================
// ==========================================================================================================================

// Образец слайдера

if (document.querySelector('.BLOCK-NAME__slider')) {
	// Инициализация слайдера: передаем фукции класс HTML-элемента, который является Основным контейнером слайдера (swiperContainer)
	// Если несколько слайдеров, то добавляем новую фукцию с другим классом для swiperContainer: const swiper_2 = new Swiper('.main-block__slider-2',{...});
	const swiper_name = new Swiper('.BLOCK-NAME__slider', {
		// Подключаем модули слайдера (для конкретного слайдера)
		modules: [Pagination, Parallax, Autoplay],

		// ---------------------------------------------------------------------------------------------

		// Навигация (Требуется подключение модуля "Navigation")
		// Псевдокласс "::after" (стрелки выводятся иконочным шрифтом для псевдоэлемента. color: #e8aa31;)
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
			// здесь можно указать любые классы вместо стандартных
			// при этом все стили нужно писать самому для всевдоэлемента "after"
		},

		// ---------------------------------------------------------------------------------------------

		// Пагинация (Требуется подключение модуля "Pagination")
		pagination: {
			// вписываем сюда наш класс нашего блока для буллетов (внутри блока будут созданы спаны для буллетов)
			el: '.swiper-pagination',

			// Булеты / фракции / прогрессбар ('bullets' | 'fraction' | 'progressbar' | 'custom'). Только один вид пагинации для одного слайдера
			type: 'bullets',
			// Чтобы буллеты нормально отображались:
			/*
			&__dots {
					display: grid;
					grid-auto-flow: column;
					justify-content: start;
					align-items: center;
					margin: 0 auto;
					overflow: hidden;
			}
			*/
			// Класс "swiper-pagination-bullet"
			// Кликабельные булеты (по умолчанию false)
			clickable: true,
			// Динамические булеты (по умолчанию false)
			// Включить, если большое количество слайдов. Таким образом, одновременно будет видно только несколько буллетов
			dynamicBullets: false,
			// Количество основных буллетов, видимых при включении dynamicBullets (по умолчанию 1). Если поставить 4, то бутет активный 4-й булет (он будет по центру)
			dynamicMainBullets: 4,
			/*
			renderBullet: function (index, className) {
				return '<span class="' + className + '">' + (index + 1) + '</span>;'
			},
			*/

			// Фракция (1/4)
			// Класс "swiper-pagination-fraction" (color: #e8aa31;)
			// type: 'fraction',
			// Кастомный вывод фракции
			/*
			renderFraction: function (currentClass, totalClass) {
				return 'Слайд <span class="' + currentClass + '">' + '</span>' +
					' из ' + '<span class="' + totalClass + '"></span>'
			},
			*/

			// Прогрессбар
			// Класс "swiper-pagination-progressbar-fill" (background: #e8aa31 !important;)
			// type: 'progressbar',
		},

		// ---------------------------------------------------------------------------------------------

		// Скролл (Требуется подключение модуля "Scrollbar")
		// Класс "swiper-scrollbar-drag" (background: #e8aa31; cursor: pointer;)
		scrollbar: {
			el: '.swiper-scrollbar',
			// Возможность перетаскивать ползунок скролла (по умолчанию false)
			draggable: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Включение/отключение перетаскивания на ПК (по умолчанию true - включено)
		simulateTouch: true,

		// Курсор перетаскивания (по умолчанию false - отключено, true - рука)
		grabCursor: true,

		// Чувствительность свайпа (по умолчанию 1)
		// Чтобы приложить меньше усилий при перетаскивании - значение увеличиваем
		// Чтобы отключить свайп и перетаскивание на всех устройствах - значение "0"
		touchRatio: 1,

		// Угол срабатывания свайпа/перетаскивания (по умолчанию 45)
		touchAngle: 45,

		// Переключение при клике на слайд (по умолчанию false)
		slideToClickedSlide: false,

		// Навигация по хешу (предназначена для ссылки на конкретный слайд, что позволяет загружать страницу с открытым конкретным слайдом)
		// Нужно добавить хэши слайдов в атрибуте data-hash (Например: <div class="swiper-slide" data-hash="slide-1">Slide 1</div>)
		hashNavigation: {
			// Отслеживать состояние: включаем возможность навигации с помощью стрелок браузера (по умолчанию false)
			watchState: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Автовысота слайдера (по умолчанию false). true - обертка слайдера адаптирует свою высоту к высоте текущего активного слайда. Полезно если текст на слайдах разного объёма
		autoHeight: false,

		// Количество слайдов для показа (по умолчанию 1)
		// Можно указать 'auto'. При этом нужно добавить слайдерам (.swiper-slide) значение "width: auto;" (Теперь ширина слайда будет формироваться самим контентом)
		slidesPerView: 1,

		// Количество пролистываемых слайдов (по умолчанию 1). Полезно для использования с slidesPerView > 1
		slidesPerGroup: 1,

		// Отключение функционала слайдера, если слайдеров недостаточно для перелистывания (по умолчанию true)
		watchOverflow: true,

		// Расстояние (отступ) между слайдами в px (по умолчанию 0)
		spaceBetween: 30,

		// Активный слайд по центру, а не слева (по умолчанию false). Полезно для использования с slidesPerView > 1
		centeredSlides: false,

		// Стартовый слайд (по умолчанию 0 - это первый индексный номер начального слайда)
		initialSlide: 0,

		// Мультирядность (требует соответствующих css настроек. Обьяснение здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (22:57))
		grid: {
			// Количество строк в одном слайде (по умолчанию 1). Может быть 'column'
			column: 1,
		},

		// Бесконечный слайдер (по умолчанию false). Скролл - отключить. Мультирядность - отключить
		// Если slidesPerView: auto - установить количество дублирующихся слайдов (см.нижже)
		// Если slidesPerView > 1 - ОТКЛЮЧИТЬ (глючит)
		// loop: false,
		loop: true,

		// Кол-во дублирующихся слайдов (по умолчанию null). Установить null или number (по умолчанию используется slidesPerView)
		loopedSlides: null,

		// Свободный режим (по умолчанию false - отключено):
		freeMode: {
			enabled: false,
			// Привязка к позициям слайдов в свободном режиме (по умолчанию false)
			sticky: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Брейк-поинты (адаптив)
		breakpoints: {
			// when window width is >= 320px
			320: {

			},
			479.98: {

			},
			767.98: {

			},
			991.98: {

			},
		},

		// ---------------------------------------------------------------------------------------------

		// Ленивая загрузка (Lazy Loading)
		// Чтобы использовать ленивую загрузку, нам просто нужно:
		// 1. Установить loading="lazy" для изображений
		// 2. Добавить на каждый слайд элемент предварительной загрузки <div class="swiper-lazy-preloader"></div>. Этот анимированный прелоадер будет автоматически удаляться после загрузки изображения

		// ---------------------------------------------------------------------------------------------

		// Автопрокрутка (Требуется подключение модуля "Autoplay")
		autoplay: {
			// Задержка между переходами, в мс (по умолчанию 3000)
			delay: 5000,
			// Закончить на последнем слайде (по умолчанию false)
			stopOnLastSlide: false,
			// Отключиь после ручного переключения слайда (по умолчанию true)
			disableOnInteraction: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление клавиатурой (Требуется подключение модуля "Keyboard")
		keyboard: {
			// Включить/выключить (по умолчанию false)
			enabled: true,
			// Включить/выключить только когда слайдер в пределах вьюпорта (по умолчанию false)
			onlyInViewport: true,
			// Включить/выключить управление клавишами pageUp и pageDown (по умолчанию true)
			pageUpDown: true,
		},

		// ---------------------------------------------------------------------------------------------

		// Управление колесом мыши (Требуется подключение модуля "Mousewheel")
		mousewheel: {
			// Чувствительность колеса мыши (по умолчанию 1)
			sensitivity: 1,
			// Класс объекта, на котором будет срабатывать прокрутка мышью (кроме самих слайдов)
			// eventsTarget: '.media-main-block__image',
		},

		// ---------------------------------------------------------------------------------------------

		// Длительность (Скорость) перехода между слайдами, в мс (по умолчанию 300)
		speed: 700,

		// Вертикальный слайдер (по умолчанию 'horizontal'). Может быть: 'horizontal' | 'vertical'. Необходимо задать css-свойство "height" для .swiper-wrapper
		direction: 'horizontal',

		// ---------------------------------------------------------------------------------------------

		// Эффекты переключения слайдов (по умолчанию 'slide'). Transition effect can be 'slide', 'fade', 'cube', 'coverflow', 'flip' or 'creative'

		// Эффект slide - листание 
		effect: 'slide',

		// --------------------------------------------------

		// Эффект fade - смена прозрачности (Требуется подключение модуля "EffectFade"). Количество слайдов для показа должно быть slidesPerView: 1
		effect: 'fade',
		// Дополнительные параметры fade
		fadeEffect: {
			// Плавное затухание слайдов (по умолчанию false)
			crossFade: true,
		},

		// --------------------------------------------------

		// Эффект flip - переворот (Требуется подключение модуля "EffectFlip"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'flip',
		// Дополнительные параметры flip
		flipEffect: {
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Показ только активного слайда (по умолчанию true)
			limitRotation: true,
		},

		// --------------------------------------------------

		// Эффект cube - переворот (Требуется подключение модуля "EffectCube"). Нужно ограничить ширину всего слайдера .swiper (Например: max-width: 700px;)
		effect: 'cube',
		// Дополнительные параметры cube
		cubeEffect: {
			// Тень основного слайдера (по умолчанию true)
			shadow: true,
			// Смещение основной тени, в пикселях (по умолчанию 20)
			shadowOffset: 20,
			// Отношение масштаба основной тени (по умолчанию 0.94)
			shadowScale: 0.94,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
		},

		// --------------------------------------------------

		// Эффект coverflow - эффекта покровного потока (Требуется подключение модуля "EffectCoverflow"). Подходит для выведения 3-х слайдов: slidesPerView: 3
		effect: 'coverflow',
		// Дополнительные параметры coverflow
		coverflowEffect: {
			// Поворот слайда в градусах (по умолчанию 50)
			rotate: 50,
			// Тени слайдов (по умолчанию true)
			slideShadows: true,
			// Наложение слайдов, в пикселях (по умолчанию 0 - без наложения)
			stretch: 0,
		},

		// ---------------------------------------------------------------------------------------------

		// Зум изображений (Требуется подключение модуля "Zoom")
		// Все «масштабируемые» изображения должны быть обернуты в div с классом "swiper-zoom-container"
		zoom: {
			// Максимальное увеличение (по умолчанию 3). Увеличивается по двойному клику на изображении
			maxRatio: 3,
			// Минимальное увеличение (по умолчанию 1)
			minRatio: 1,
		},

		// ---------------------------------------------------------------------------------------------

		// Миниатюры или превью (Требуется подключение модуля "Thumbs"). Описание работы здесь: https://www.youtube.com/watch?v=ddbxsrGPRY0 (36:43)

		// Слайдер с миниатюрами имеет полный набор своих настроек (для этого нужно сделать отделюную структуру слайдера в html под главным слайдером). Количество миниатюр = количеству слайдов
		thumbs: {
			// Свайпер с миниатюрами (указать имя свайпера с миниатюрами, например: const thumbsSwiper = new Swiper('.thumbs-images', {...})
			// КОД С НАСТРОЙКАМИ СЛАЙДЕРА С МИНИАТЮРАМИ РАЗМЕСТИТЬ НАД ОСНОВНЫМ СЛАЙДЕРОМ (в этом файле)
			swiper: thumbsSwiper
		},

		// ---------------------------------------------------------------------------------------------

		// Паралакс (Требуется подключение модуля "Parallax"). В html необходимо добавить элементам дата-атрибуты, подробнее здесь: https://swiperjs.com/swiper-api#parallax
		parallax: true,

		// ---------------------------------------------------------------------------------------------

		// Передача управления: одностороннее управление (Требуется подключение модуля "Controller")
		controller: {
			// Передайте сюда еще один экземпляр Swiper (swiper_2) или массив с экземплярами Swiper, которыми должен управлять этот Swiper. Также принимает строку с селектором CSS элемента Swiper
			control: '.block-name__slider-2',
			// Управление будет осуществляться в обратном направлении (по умолчанию false - выключено)
			inverse: false,
		},

		// ---------------------------------------------------------------------------------------------

		// Виртуальные слайды (Требуется подключение модуля "Virtual")
		// Когда слады не прописаны в html, а добавляются динамически (из каких-то полученных данных)
		// Модуль Virtual Slides позволяет хранить в DOM только необходимое количество слайдов. Это очень полезно с точки зрения производительности и проблем с памятью, если у вас много слайдов, особенно слайдов с тяжелым DOM-деревом или изображениями.

		// Формирование слайда (подробнее об этом здесь: www.youtube.com/watch?v=ddbxsrGPRY0 (44:02))

		virtual: {
			slides: (function () {
				let slide = []
				// Выводим до 500 слайдов
				for (let i = 0; i < 500; i++) {
					// Указываем класс Основного контейнера
					slide.push(`<div class="main-block__slider">Слайд №${i}</div>`);
				}
				return slide;
			}()),
		},

		// ---------------------------------------------------------------------------------------------

		// Доступность: для людей с ограниченными возможностями (Требуется подключение модуля "A11y")
		a11y: {
			// Включить/выключить (по умолчанию true)
			enabled: true,
			// Сообщения для скринридеров
			prevSlideMessage: 'Previous slide',
			nextSlideMessage: 'Next slide',
			firstSlideMessage: 'This is the first slide',
			lastSlideMessage: 'This is the last slide',
			paginationBulletMessage: 'Go to slide {{index}}',
			notificationClass: 'swiper-notification',
			containerMessage: '',
			containerRoleDescriptionMessage: '',
			itemRoleDescriptionMessage: '',
			slideRole: 'group',
		},


		// ---------------------------------------------------------------------------------------------

		// Если слайдер нужно показать не сразу, т.е. изначально он скрыт (напрмер, слайдер отображается при переключении на ТАБ, в котором он раположен)

		// Обновить свайпер: при изменении элементов слайдер (по умолчанию false)
		// В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).
		observer: false,

		// Обновить свайпер: при изменении родительских элементов слайдер (по умолчанию false)
		observeParents: false,

		// Обновить свайпер: при изменении жочерних элементов слайдер (по умолчанию false)
		observeSlideChildren: false,

		// ---------------------------------------------------------------------------------------------

		// События (полный список событий: https://swiperjs.com/swiper-api#events)
		// Событиями также можем управлять за пределами слайдера (см. ниже)
		on: {
			// Событие инициализации
			init: function (swiper) {
				// const fractionTotal = document.querySelector('.fraction-controll__total');				// Фракция, в которой выводится общее количество слайдов
				// // Добавляем число слайдов
				// fractionTotal.innerHTML = swiper.slides.length;
				// // Если нужно добавить 0 перед числом
				// // fractionTotal.innerHTML = swiper.slides.length < 10 ? `0${swiper.slides.length}` : swiper.slides.length;
			},
			// Событие смены слайдера
			slideChange: function () {
				// const fractionCurrent = document.querySelector('.fraction-controll__current');		// Фракция, в которой выводится номер текущео слайда
				// // Добавляем номер текущего слайда
				// fractionCurrent.innerHTML = ++this.realIndex;													// ++this.realIndex - Получаем Индексный номер текущего активного слайда (увеличенный на 1, т.к. порядок начинается с 0)
			},
		},

	});

	// ==========================================================================================================================
}